plugins {
    alias(libs.plugins.asciidoctor) apply false
    alias(libs.plugins.kotlin.jvm) apply false
    alias(libs.plugins.kotlin.jpa) apply false
    alias(libs.plugins.kotlin.noarg) apply false
    alias(libs.plugins.kotlin.allopen) apply false
    alias(libs.plugins.kotlin.spring) apply false
    alias(libs.plugins.protobuf) apply false
    alias(libs.plugins.shadow) apply false
    alias(libs.plugins.nemerosa.versioning) apply false
    alias(libs.plugins.ktlint) apply false
    alias(libs.plugins.detekt) apply false
}

apply plugin: 'base'

allprojects {
    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    apply plugin: 'io.gitlab.arturbosch.detekt'

    group = 'org.scriptonbasestar.keycloak.exts'
    version = '0.0.2-SNAPSHOT'

    repositories {
        mavenCentral()
        google()
    }

    ktlint {
        debug = false
        verbose = false
        android = false
        outputToConsole = true
        ignoreFailures = false
        enableExperimentalRules = true
        filter {
            exclude("**/generated/**")
            include("**/kotlin/**")
        }
    }

    detekt {
        buildUponDefaultConfig = true
        allRules = false
        config = files("$projectDir/config/detekt/detekt.yml")
    }

    configurations {
        bundleLib
    }
}

//init.dependsOn(addKtlintCheckGitPreCommitHook)

apply plugin: 'base'

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'kotlin'

//    apply plugin: 'kotlin-jpa'
//    apply plugin: 'kotlin-spring'
//    apply plugin: 'kotlin-noarg'
//    apply plugin: 'kotlin-allopen'

    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
    apply plugin: 'org.jetbrains.kotlin.plugin.allopen'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'

    apply plugin: 'org.asciidoctor.jvm.convert'

    dependencies {
        // Kotlin
        implementation libs.bundles.kotlin
        implementation libs.kotlin.coroutines.reactor

        // Groovy
        implementation libs.bundles.groovy

        // Testing
        testImplementation libs.bundles.testing
        testImplementation libs.bundles.testcontainers

        // Enterprise Features
        implementation libs.bundles.jackson
        implementation libs.bundles.logging
        implementation libs.bundles.metrics
    }

    configurations {
        compileOnly {
//            extendsFrom(configurations.annotationProcessor)
            extendsFrom(annotationProcessor)
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    compileJava {
        options.annotationProcessorPath = configurations.annotationProcessor
    }
    
    compileKotlin {
        kotlinOptions {
            jvmTarget = '21'
            freeCompilerArgs = ['-Xjsr305=strict', '-opt-in=kotlin.RequiresOptIn']
        }
    }
    
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '21'
            freeCompilerArgs = ['-Xjsr305=strict', '-opt-in=kotlin.RequiresOptIn']
        }
    }
    
    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
        }
    }
}
