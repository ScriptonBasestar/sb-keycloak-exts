name: Integration Tests

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      checks: write
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        gradle-version: 8.8
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Cache TestContainers
      uses: actions/cache@v4
      with:
        path: ~/.testcontainers
        key: ${{ runner.os }}-testcontainers-${{ hashFiles('**/build.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-testcontainers-
    
    - name: Start Docker
      run: |
        sudo systemctl start docker
        sudo docker info
        
    - name: Run Unit Tests
      run: ./gradlew test --continue
      
    - name: Run Integration Tests
      run: ./gradlew integrationTest --continue
      env:
        TESTCONTAINERS_RYUK_DISABLED: true
        
    - name: Generate Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Integration Test Results
        path: '**/build/test-results/**/TEST-*.xml'
        reporter: java-junit
        fail-on-error: true
        
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/build/test-results/
          **/build/reports/
          
    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: '**/build/reports/jacoco/'
        
    - name: Comment Test Results on PR
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: github.event_name == 'pull_request'
      with:
        files: '**/build/test-results/**/TEST-*.xml'
        comment_title: 'Integration Test Results'
        check_name: 'Integration Test Results'
        
    - name: Cleanup
      if: always()
      run: |
        docker system prune -f
        ./gradlew --stop